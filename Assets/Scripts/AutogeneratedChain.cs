using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class AutogeneratedChain : MonoBehaviour
{
    public GameObject Segment;

    public GameObject ConnectionParent, ConnectionChild;


    Vector3 GetSegmentConnectionPoint() => Segment.TransformChildren().First(ch => ch.name == "ConnectionPoint").transform.localPosition;
    Vector3 GetSegmentAnchorPoint() => Segment.GetComponent<Joint>().anchor;



    void GenerateTheChain()
    {
        Vector3 connectionPoint = GetSegmentConnectionPoint(), anchorPoint = GetSegmentAnchorPoint();
        float segmentLength = Vector3.Distance(connectionPoint, anchorPoint);

        Vector3 connectionsDistanceOriginalVector = ConnectionParent.transform.position - ConnectionChild.transform.position;
        float connectionsDistance = connectionsDistanceOriginalVector.magnitude;
        
        var segmentCount = Mathf.CeilToInt(connectionsDistance / segmentLength);

        if (segmentCount <= 1)
            throw new System.FormatException("Total chain length must be greater than that of single segment (but it isn't)!");

        var tiltAngle_rad = GeometryUtils.ComputeTriangleAngle_sss((segmentCount - 1) * segmentLength, segmentLength, connectionsDistance);
        var tiltAngle = tiltAngle_rad * Mathf.Rad2Deg;



    }






    private void Start()
    {
        GenerateTheChain();
    }
}
